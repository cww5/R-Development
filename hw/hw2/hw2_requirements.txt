Connor Watson
10/2/18

1. Write a function F(x) which takes x as the input parameter. It calculates and prints the value of the following piecewise function:
f(x) = {   5/ (x-1)^2      , x<1
       {   2               , x=1
       {   5/ (x-1)^3      , x>1

Testing commands:	F(1);	F(10);	F(0.3);

2, The Fibonacci sequence 1, 1, 2, 3, 5, 8, 13, 21…… starts with two 1s, and each term afterwards is the sum of its two predecessors. Please write a function, Fib(n), which takes n as the input parameter. It will return the n-th number in the Fibonacci sequence.

Testing commands:	Fib(1);	Fib(2);	Fib(100);

3,The merge operation plays an important role in merge sort algorithm. Suppose you have two sorted sequences S1 and S2, merge operation will combine these two sequences into a single ordered sequence. Please write a function, Merge(S1, S2), which accepts two ordered vectors S1 and S2 as parameters. It will return a single ordered sequence. For example,
S1 = c(1,3,5,7);
S2=c(2,4,6,10);
Merge(S1, S2) will return c(1,2,3,4,5,6,7,10)

Testing commands:	Merge(seq(1, 50, by=3), seq(2, 30, by=2))

4, One of the most important algorithms is the quick sort, which is based on the quick sort partition. Here we implement a simple version of the partition function. Please write a function, Partition(pivot, vect), which takes two parameters. The function partitions the sequence, vect, into two parts (part1 <= pivot; part2 > pivot) based on the pivot. For example,
Pivot = 6;
Vect = c(1, 5, 3, 7, 9, 6, 4, 2, 10, 8);
List = Partition(Pivot, Vect);
List[[1]] is c(1,5,3,4,2, 6) and List[[2]] is c(7, 9, 10, 8).

Note that Partition returns a list.

Testing commands:	Partition(50, sample(1:100, 100, replace=F))